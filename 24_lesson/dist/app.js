class ContactAPI{static API="https://64255d537ac292e3cffe899f.mockapi.io/api/contacts/";static request(t="",n="",e,o){return fetch(ContactAPI.API+t,{method:n,body:e?JSON.stringify(e):void 0,headers:{"Content-type":"application/json"}}).then(t=>{if(t.ok)return t.json();throw new Error(o)})}static getContacts(){return ContactAPI.request("","GET","","Can not retrieve contacts from server")}static createContact(t){return ContactAPI.request("","POST",t,"Can not create contact on server")}static updateContact(t,n){return ContactAPI.request(t,"PUT",n,"Can not update contact on server")}static deleteContact(t){return ContactAPI.request(t,"DELETE","","Can not delete contact on server")}}const SELECTOR_CONTACT_ROW=".contactRow",SELECTOR_DELETE_BTN=".deleteBtn",SELECTOR_EDIT_BTN=".editBtn",contactForm=document.querySelector("#contactForm"),$contactContainer=$("#contactContainer");let contactList=[];function onContactFormSubmit(t){t.preventDefault();const e=getData();isValidData(e)?e.id?ContactAPI.updateContact(e.id,e).then(n=>{changeContact(e.id,n),clearForm(),contactList=contactList.map(t=>t.id===e.id?n:t)}).catch(t=>showError(t)):ContactAPI.createContact(e).then(t=>{renderContacts(t),clearForm(),contactList.push(t)}).catch(t=>showError(t)):showError(new Error("You must enter correct data"))}function deleteContactEl(t){const n=findContactEl(t.target),e=getContactElId(n);ContactAPI.deleteContact(e).then(()=>{n.remove()}).catch(t=>showError(t)),contactList=contactList.filter(t=>t.id!==e)}function findContactEl(t){return t.closest(SELECTOR_CONTACT_ROW)}function editContactEl(t){fillForm(findContactById(getContactElId(findContactEl(t.target))))}function getData(){return{...findContactById(contactForm.hiddenInput.value)||{},name:contactForm.nameInput.value,surname:contactForm.surnameInput.value,phone:contactForm.phoneInput.value}}function isValidData(t){return t.name&&t.surname&&t.phone}function showError(t){alert(t.message)}function renderContactsList(t){t=t.map(generateContactsHtml);$contactContainer.html(t)}function renderContacts(t){t=generateContactsHtml(t);$contactContainer.append(t)}function changeContact(t,n){document.querySelector(`[data-id="${t}"]`).outerHTML=generateContactsHtml(n)}function generateContactsHtml(t){return`
    <tr class="contactRow" data-id="${t.id}">
      <td>${t.name}</td>
      <td>${t.surname}</td>
      <td>${t.phone}</td>
      <td>
        <button class="editBtn">Edit</button>
        <button class="deleteBtn">Delete</button>
      </td>
    </tr>
  `}function clearForm(){contactForm.reset(),contactForm.hiddenInput.value=""}function getContactElId(t){return t.dataset.id}function findContactById(n){return contactList.find(t=>t.id===n)}function fillForm(t){contactForm.hiddenInput.value=t.id,contactForm.nameInput.value=t.name,contactForm.surnameInput.value=t.surname,contactForm.phoneInput.value=t.phone}contactForm.addEventListener("submit",onContactFormSubmit),$contactContainer.on("click",SELECTOR_DELETE_BTN,deleteContactEl).on("click",SELECTOR_EDIT_BTN,editContactEl),ContactAPI.getContacts().then(t=>{renderContactsList(t),contactList=t}).catch(t=>showError(t));
//# sourceMappingURL=app.js.map
